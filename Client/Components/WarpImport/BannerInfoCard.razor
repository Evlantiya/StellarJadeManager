@inject IDialogService Dialog


<MudPaper Height="600px" Elevation="10" Outlined="true" Class="relative">
    <div class="banner-image @(Height == 1000?"lc":"")" style="background-image: url(@ImageSrc);"></div>
    <MudPaper Class="banner-info banner-name pa-2">
        <div class="d-flex flex-column">
        <MudText Typo="Typo.h6">Banner</MudText>
        <MudText Typo="Typo.subtitle2">Earthly Escapade</MudText>
        </div>
        <MudSpacer/>
        <MudIconButton Icon="@Icons.Material.Filled.MenuOpen" aria-label="history" OnClick="OpenHistory"></MudIconButton>
    </MudPaper>
    <div class="d-flex flex-column align-center" style="position: absolute;bottom: 10px;left: 10px;">
        <div class="banner-pity flex-column justify-center align-end ">
            <div class="d-flex justify-space-around gap-x-2 align-center leg">
                @if (BannerInfo?.BannerTypeId == 11 || BannerInfo?.BannerTypeId == 12)
                {
                    @if(BannerInfo.GuaranteedLegendary){
                        <MudIcon Icon="@Icons.Material.Filled.Check" Title="Guarantee" />
                    }
                    else{
                        <MudIcon Icon="@Icons.Material.Filled.Casino" Title="50/50" />
                    }
                }
                <div class="d-flex">
                    <MudText Typo="Typo.h4">@BannerInfo?.CurrentLegendaryPity</MudText>
                    <MudText Typo="Typo.subtitle2">/@(_bannerMaxPity[BannerInfo.BannerTypeId])</MudText>
                </div>
            </div>
            <MudDivider Class="my-1"/>
            <div class="d-flex gap-x-5 ">
                <div class="d-flex flex-column align-start">
                    @if (BannerInfo?.BannerTypeId == 11 || BannerInfo?.BannerTypeId == 12)
                    {
                        <MudText Typo="Typo.body1">Winrate</MudText>
                    }   
                    <MudText Typo="Typo.body1">Медианна</MudText>
                </div>
                <div class="d-flex flex-column align-end">
                    @if (BannerInfo?.BannerTypeId == 11 || BannerInfo?.BannerTypeId == 12)
                    {
                        <MudText Class="leg" Typo="Typo.body1">@((Math.Round(BannerInfo.CalculateWinrate(5), 1)).ToString("0.0"))%</MudText>
                    }
                    
                    <MudText Class="leg" Typo="Typo.body1">@(BannerInfo.CalculateMedianPity(5))</MudText>
                </div>
            </div>
        </div>
        <div class="banner-pity flex-column justify-center align-end">
            <div class="d-flex justify-space-around gap-x-2 align-center epic">
                @if (BannerInfo?.BannerTypeId == 11 || BannerInfo?.BannerTypeId == 12)
                {
                    @if(BannerInfo.GuaranteedEpic){
                        <MudIcon Icon="@Icons.Material.Filled.Check" Title="Guarantee" />
                    }
                    else{
                        <MudIcon Icon="@Icons.Material.Filled.Casino" Title="50/50" />
                    }
                }
                <div class="d-flex">
                    <MudText Typo="Typo.h4">@BannerInfo?.CurrentEpicPity</MudText>
                    <MudText Typo="Typo.subtitle2">/10</MudText>
                </div>
            </div>
            <MudDivider Class="my-1"/>
            <div class="d-flex gap-x-5 ">
                <div class="d-flex flex-column align-start">
                    @if (BannerInfo?.BannerTypeId == 11 || BannerInfo?.BannerTypeId == 12)
                    {
                        <MudText Typo="Typo.body1">Winrate</MudText>
                    }   
                    <MudText Typo="Typo.body1">Медианна</MudText>
                </div>
                <div class="d-flex flex-column align-end">
                    @if (BannerInfo?.BannerTypeId == 11 || BannerInfo?.BannerTypeId == 12)
                    {
                        <MudText Class="epic" Typo="Typo.body1">@((Math.Round(BannerInfo.CalculateWinrate(4), 1)).ToString("0.0"))%</MudText>
                    }
                    
                    <MudText Class="epic" Typo="Typo.body1">@(BannerInfo.CalculateMedianPity(4))</MudText>
                </div>
            </div>
        </div>
    </div>

    @* <MudGrid Class="hueta" Spacing="5" Justify="Justify.SpaceAround">
        <MudItem Class="banner-pity" xs="4" sm="4" md="4" lg="4">
        </MudItem>
        <MudItem Class="banner-pity" xs="3" sm="3" md="3" lg="3">
        </MudItem>
        <MudItem Class="banner-pity" xs="4" sm="4" md="4" lg="4">
        </MudItem>
        <MudItem Class="banner-pity" xs="3" sm="3" md="3" lg="3">
        </MudItem>
    </MudGrid> *@
</MudPaper>

<style>
    .banner-image {
        width: 100%; /* Ширина контейнера */
        height: 100%; /* Высота контейнера */
        @* background-image: url(@ImageSrc); /* Путь к вашему изображению */ *@
        filter: brightness(0.9);
        background-size: cover; /* Масштабирует изображение так, чтобы оно полностью покрывало фоновую область */
        background-position: center; /* Центрирует изображение в контейнере */
        background-repeat: no-repeat; /* Запрещает повторение изображения */
    }
    .lc {
        background-size: cover; /* Масштабирует изображение так, чтобы оно полностью покрывало фоновую область */
        @* background-position: 50% 35%; /* Центрирует изображение в контейнере */
        background-repeat: no-repeat; /* Запрещает повторение изображения */ *@
    }

    .banner-name{
        backdrop-filter: blur(5px);
        width:100%;
        display:flex;
        top:0;
        left:0;
    }
    .banner-pity{
        backdrop-filter: blur(5px);
        background-color: rgba(10,10,10,0.85);
        
        @* border: 1px solid; *@
        @* border-color: var(--legendary-rarity-color); *@
        border-radius: 5px;
        margin-top: 5px;
        margin-bottom: 5px;
        width: fit-content;
        padding: 1rem;
        display: flex;
        justify-content: center;
        align-items: center;
        box-shadow: 0 0 25px 5px rgb(10,10,10);
    }
@* 
    .banner-pity:has(.leg){
    }
    .banner-pity:has(.epic){
        box-shadow: 0 0 25px -10px var(--epic-rarity-color);
    } *@
    .leg{
        text-shadow: 1px 1px 5px var(--legendary-rarity-color);
        color: var(--legendary-rarity-color);
        width:fit-content;
        
    }
    .epic{
        text-shadow: 1px 1px 5px var(--epic-rarity-color);
        color: var(--epic-rarity-color);
        width:fit-content;
    }

    .banner-info{
        position:absolute;
        background-color: rgba(10,10,10,0.85);
        box-shadow: 0 15px 25px -10px rgba(0, 0, 0, 0.85);
        
    }

    .hueta{
        position:absolute;
        margin:0;
        margin-bottom: 5px;
        bottom: 0;
        left:0;
        width:100%;
    }
</style>


@code{

    [Parameter]
    public string ImageSrc {get;set;}
    [Parameter]
    public UserBannerInfo BannerInfo {get;set;}

    private int Height => 500 * ( (BannerInfo?.BannerTypeId ?? -1) == (int)BannerTypeEnum.LIGHTCONE ? 2 : 1);

    private Dictionary<int, string> _bannerMaxPity = new Dictionary<int, string>(){
        {11, "90"},
        {1, "90"},
        {12, "80"},
        {2, "50"}
    };


    DialogOptions fullScreen = new DialogOptions() { FullScreen = true, CloseButton = true };

    public async Task OpenHistory(){
        var hren_w = BannerInfo.CalculateWinrate(5);
        var hren_m = BannerInfo.CalculateMedianPity(5);
        var parameters = new DialogParameters<WarpHistoryDialog> {{ x => x.BannerInfo, BannerInfo }};
        var dialog = await Dialog.ShowAsync<WarpHistoryDialog>("История прыжков", parameters, fullScreen);
    }


}